{"version":3,"sources":["../src/mock.js"],"names":["mock","api","config","defaultConfig","app","server","http","createServer","use","exposedHeaders","corsHeaders","bodyParser","json","listen","process","env","PORT","port","console","log","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;AAMA,IAAMA,OAAO,SAAPA,IAAO,CAACC,GAAD,EAAiC;AAAA,MAA3BC,MAA2B,uEAAlBC,gBAAkB;;AAC5C,MAAMC,MAAM,wBAAZ;AACAA,MAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEA;AACAA,MAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEAJ,MAAII,GAAJ,CACE,oBAAK;AACHC,oBAAgBP,OAAOQ;AADpB,GAAL,CADF;;AAMAN,MAAII,GAAJ,CAAQG,qBAAWC,IAAX,EAAR;;AAEAR,MAAII,GAAJ,CAAQ,GAAR,EAAaP,GAAb;;AAEAG,MAAIC,MAAJ,CAAWQ,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBd,OAAOe,IAA7C,EAAmD,YAAM;AACvDC,YAAQC,GAAR,sBAA+Bf,IAAIC,MAAJ,CAAWe,OAAX,GAAqBH,IAApD;AACD,GAFD;AAGD,CApBD;;kBAsBejB,I","file":"mock.js","sourcesContent":["import http from 'http'\nimport express from 'express'\nimport cors from 'cors'\nimport morgan from 'morgan'\nimport bodyParser from 'body-parser'\nimport defaultConfig from './config.json'\n\n/**\n * Create an Express server to run mock endpoints\n * @param {Router} api - Express Router object\n * @param {object} config - TBD. This was from the boilerplate. Maybe we want to\n * configure the app root or other information from an apps `application.config.js`.\n */\nconst mock = (api, config = defaultConfig) => {\n  const app = express()\n  app.server = http.createServer(app)\n\n  // Logging\n  app.use(morgan('dev'))\n\n  app.use(\n    cors({\n      exposedHeaders: config.corsHeaders\n    })\n  )\n\n  app.use(bodyParser.json())\n\n  app.use('/', api)\n\n  app.server.listen(process.env.PORT || config.port, () => {\n    console.log(`Started on port ${app.server.address().port}`)\n  })\n}\n\nexport default mock\n"]}